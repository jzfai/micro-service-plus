<template>
    <Dialog :title="title" :width="'50%'" :status="status" @close="handleClose">
        <div slot="content" class="content add-model">
            <el-form
                    ref="ruleForm"
                    :model="formData"
                    :rules="rules"
                    label-position="left"
                    label-width="100px"
            >
                #foreach($item in $formConfig)
                    #if($item.inputType=="input")
                        <el-form-item label="${item.label}" prop="${item.key}">
                            <el-input
                                    v-model="formData.${item.key}"
                                    maxlength="16"
                                    clearable
                                    placeholder="请输入${item.label}"
                            />
                        </el-form-item>
                    #elseif($item.inputType=="mst")
                        <el-form-item label="${item.label}" prop="${item.key}">
                            <multi-special-tag
                                    v-model="formData.${item.key}"
                                    dict-code="carTypeEnum"
                                    placeholder="请选择${item.label}"
                                    type="carType"
                            />
                        </el-form-item>
                    #elseif($item.inputType=="textarea")
                        <el-form-item label="${item.label}" prop="${item.key}">
                            <el-input
                                    v-model="formData.${item.key}"
                                    type="textarea"
                                    maxlength="100"
                                    show-word-limit
                                    autosize
                                    resize="none"
                                    clearable
                                    placeholder="请输入${item.label}..."
                            />
                        </el-form-item>
                    #end
                #end
            </el-form>
        </div>
        <div slot="footer" class="footers">
            <el-button size="small" @click="handleClose">取消</el-button>
            <el-button type="primary" size="small" @click="handleSubmit">确定
            </el-button>
        </div>
    </Dialog>
</template>

<script>
    import Dialog from "@/components/dialog";

    export default {
        components: {Dialog},
        props: {
            dialogValue: Object,
        },
        data() {
            return {
                status: false,
                title: "",
                successStatus: false,
                formData: {
                    id: "",
                    #foreach($item in $formConfig)
                            $item.key: "",
                    #end

                },
                carModelOptions: [],
                rules: {
                    #foreach($item in $formConfig)
                        #if($item.rule=="notEmpty")
                                $item.key: {required: true, message: "请输入${item.label}", trigger: ["blur", "change"]},
                        #elseif ($item.rule=="positiveInteger")
                                $item.key: [
                                {required: true, message: "请输入${item.label}", trigger: "blur"},
                                {
                                    pattern: /^[1-9]\d*$/,
                                    message: "充电仓数为正整数",
                                    trigger: "blur",
                                },
                            ],
                        #end
                    #end
                },
            };
        },
        watch: {
            dialogValue: {
                handler(newData) {
                    if (newData && newData.status) {
                        this.title = newData.title;
                        this.successStatus = false;
                        if (this.title === "${commonConfig.name}详情}") {
                            // 编辑
                            this.formData.${commonConfig.idKey} = newData.value.${commonConfig.idKey};
                            this.getStationModelDetail(newData.value.${commonConfig.idKey});
                        } else {
                            // 新增
                            this.status = newData.status;
                        }
                    }
                },
            },
            status(newData) {
                if (!newData) {
                    this.formData = {
                        id: "",
                        #foreach($item in $formConfig)
                                $item.key: "",
                        #end
                    };
                    this.$refs.ruleForm.resetFields();
                    this.$emit("refresh", this.successStatus);
                }
            },
        },
        mounted() {
            this.getListCarModelBasicPage();
        },
        methods: {
            // 关闭弹窗
            handleClose() {
                this.status = false;
            },

            // 获取车型列表
            getListCarModelBasicPage() {
                this.$request(
                        "/standingbook/api/v1.0/assert/carModel/listCarModelBasicPage",
                        {
                            data: {pageIndex: 1, pageSize: 1000},
                        }
                )
                        .then((response) => {
                            this.carModelOptions = response.data.map((item) => {
                                return {
                                    modelName: item.modelName ? item.modelName : "-",
                                    mfrsName: item.mfrsName ? item.mfrsName : "-",
                                    id: item.${commonConfig.idKey},
                                };
                            });
                        })
                        .catch(() => {
                        });
            },

            // 获取换电站型号详情
            getStationModelDetail(id) {
                this.$request(
                        "${apiConfig.detailApi}" + id,
                        {
                            // params: params,
                            method: "${apiConfig.detailMethod}",
                        }
                )
                        .then((response) => {
                            this.formData = response.data;
                            this.status = true;
                        })
                        .catch(() => {
                        });
            },

            // 保存操作
            handleSubmit() {
                // 校验必填
                const refForm = this.$refs.ruleForm
                refForm.validate((valid) => {
                    if (valid) {
                        const params = this.formData
                        //此处提交数据的具体逻辑无法处理，默认只是提交formData里的数据，如果需要处理数据请自己处理
                        this.$request(
                                "${apiConfig.addApi}",
                                {
                                    data: params,
                                    methods: "${apiConfig.addMethod}"
                                }
                        ).then((response) => {
                            if (response.code === "200") {
                                this.$message.success("保存成功");
                                this.status = false;
                                this.successStatus = true;
                            }
                        });
                    }
                });
            },
        },
    };
</script>

<style lang="scss" scoped>
    .add-model {
        padding-top: 24px;
    }
</style>
